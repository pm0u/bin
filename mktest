#! /bin/zsh

#make things pretty colors later on
WHITE='\033[0;37m'
NC='\033[0m'

# this sets up package.json i think.
printf "${WHITE}### npm init -y${NC}\n"
npm init -y

# this installs mocha and chai locally 
printf "${WHITE}### npm install mocha chai${NC}\n"
npm install mocha chai

# initiate mocha test folders, etc
printf "${WHITE}### mocha init ./test${NC}\n"
mocha init ./test

# add source for chai to tests/index.html
sed -i '/<script src="mocha.js"><\/script>/a\    <script type="text\/javascript" src="..\/node_modules\/chai\/chai.js"><\/script>' ./test/index.html


# prompt for existing
JSFILE="N"
read 'JSFILE?Do you have an existing script(leave blank for "no")?(y/N)'

case $JSFILE in 
	[yY]* ) 
		#if there is a file you'd like to source, do this
		read -p "Please enter file location relative to current path ($(pwd))" JSFILEPATH;;
	* )
		#if not, make a default file
		mkdir ./src
		touch ./src/index.js
		JSFILEPATH='src/index.js';;
esac

FULLPATH="../${JSFILEPATH}"

# add source for js file to index.html (either default or provided)
printf "${WHITE}### adding source for js file to index.html...${NC}\n"
sed -i '/<script src="mocha.js"><\/script>/a\    <script type="text\/javascript" src="'"${FULLPATH}"'"><\/script>' ./test/index.html


# add basic page/file load test to tests and some chai commands
printf "${WHITE}### adding chai shortcuts and basic tests to tests.js${NC}\n"
printf "const assert = chai.assert
const expect = chai.expect
const should = chai.should()
	
describe('page load', function () {
  it('worked?', function () {
    expect(true).to.equal(true)
  })
})" > ./test/tests.js

# this sees if .gitignore exists, if not create it
printf "${WHITE}### adding node_modules folder to .gitignore...${NC}\n"
if [ ! -f .gitignore ]; then
	touch .gitignore
fi

#append node_modules to .gitignore so that all the modules don't get synced with your github repo
printf "node_modules/" >> .gitignore

printf "${WHITE}### DONE!!!${NC}\n"

